---
title: 序列化_特性
date: 2022-08-25 03:26:16.0
updated: 2022-08-25 03:26:16.0
categories: 
- Unity
tags: 
- Unity基础
---

# 1. [SerializeField]

**让私有的和保护的也可以被显示**

```cs
[SerializeField]
private int privateInt;
[SerializeField]
protected string protectedStr;
```

 ![img](https://img-blog.csdnimg.cn/ee7ee0052f534b528abdcd99714e5215.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARE9VTTEyMw==,size_12,color_FFFFFF,t_70,g_se,x_16)

# 2. [HideInInspector]

**公开的变量不会暴露到编辑器**

```cs
[HideInInspector]
public int publicInt2 = 50;
```



# 3. [System.Serializable]

**让自定义类型暴露到编辑器**

**注意: 字典类型例外**

```cs
[System.Serializable]
public struct MyStruct
{
    public int age;
    public bool sex;
}

public class Test : MonoBehaviour
{
    public MyStruct mystruct;
}
```

 ![img](https://img-blog.csdnimg.cn/15b106b5ad5d4676add63b2628e33437.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARE9VTTEyMw==,size_12,color_FFFFFF,t_70,g_se,x_16)

#  4. [Header()]

**为成员分组**

```cs
    [Header("分组说明")]
    [Header("基础属性")]
    public int age;
    public bool sex;
    [Header("战斗属性")]
    public int atk;
    public int def;
```

 ![img](https://img-blog.csdnimg.cn/e16b60b0e8ee4d859a31a1f79de5d92e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARE9VTTEyMw==,size_12,color_FFFFFF,t_70,g_se,x_16)

# 5. [Tooltip()]

**为变量添加说明**

```cs
    [Tooltip("说明内容")]
    public int miss;
```

 ![img](https://img-blog.csdnimg.cn/7dc183cf651f46e2ac830d2703bee44d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARE9VTTEyMw==,size_12,color_FFFFFF,t_70,g_se,x_16)

#  6. [Space()]

**让两个字段之间出现间隔**

```cs
    [Tooltip("说明内容")]
    public int miss;
    [Space()]
    public int crit;
```

 ![img](https://img-blog.csdnimg.cn/871a6ecd1436454b9197056c0156c409.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARE9VTTEyMw==,size_12,color_FFFFFF,t_70,g_se,x_16)

# 7. [Range(min, max)]

**限制数值范围**

```cs
    [Range(0, 10)]
    public float luck;
```

 ![img](https://img-blog.csdnimg.cn/9f1fb0ef4523469e9e0540ab5925cc1c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARE9VTTEyMw==,size_12,color_FFFFFF,t_70,g_se,x_16)

# 8. [ContextMenuItem("显示按钮名", "方法名")]

 **为变量添加快捷方法**



  参数1 显示按钮名

  参数2 方法名 不能有参数

```cs
    [ContextMenuItem("重置钱", "Test")]
    public int money;
    private void Test()
    {
        money = 99;
    }
```

 ![img](https://img-blog.csdnimg.cn/0265e1cf4eed4c18a7fa4886199166a9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARE9VTTEyMw==,size_12,color_FFFFFF,t_70,g_se,x_16)(右键参数)

#  9. [ContextMenu("测试函数")]

**为方法添加特性能够在Inspector中执行**

```cs
    [ContextMenu("Test")]
    private void TestFun()
    {
        print("测试方法");
    }
```

 ![img](https://img-blog.csdnimg.cn/c74f2bd62ff8400c8a16ee5b181312c3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARE9VTTEyMw==,size_12,color_FFFFFF,t_70,g_se,x_16)

 