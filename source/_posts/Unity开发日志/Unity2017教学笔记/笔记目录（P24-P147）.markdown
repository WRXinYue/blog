（P24-P147）课程编号,重要知识点及对应时间

开始：
P24  2.C#基础04-01,03:10 .NET简介    12:51开始编程
P25  2.C#基础04-02,00:00 控制台输出，读取控制台输入
P26  2.C#基础04-03,00:00 代码结构讲解
P27  2.C#基础04-04,00:00 变量    12:10 数据类型
P28  2.C#基础04-05,00:00 变量语法
P29  2.C#基础04-06,00:00 变量案例    08:31 调试    17:43 练习
P30  2.C#基础04-07,00:00 练习讲解    11:46 本章书籍推荐
P31  2.C#基础05-01,00:00 上节回顾
P32  2.C#基础05-02,00:00 项目打开方式    02:25 默认启动项    06:06 占位符，格式化字符串
P33  2.C#基础05-03,00:00 控制台使用占位符    02:25 标准数字字符串格式化    13:11 转义字符
P34  2.C#基础05-04,00:00 编译原理
P35  2.C#基础05-05,01:00 上节回顾    02:10 赋值运算符    05:44 算术运算符
P36  2.C#基础05-06,00:00 比较运算符    02:34 逻辑运算符    
P37  2.C#基础05-07,00:00 快捷运算符    04:45 一元运算符    15:22 三元运算符    19:53 优先级
P38  2.C#基础05-08,01:32 数据类型转换    10:27 获取字符串中的字符
P39  2.C#基础05-09,00:56 上节练习讲解    
P40  2.C#基础05-10,00:36 隐式转换，显示转换
P41  2.C#基础05-11,00:00 数据相加的结果类型
P42  2.C#基础05-12,01:09 选择语句if…else…
P43  2.C#基础05-13,00:00 练习讲解    15:30 if..else..的简化写法
P44  2.C#基础05-14,00:00 练习讲解    05:40 switch…case… 
P45  2.C#基础05-15,00:00 练习讲解    02:04 case简化写法
P46  2.C#基础06-01,00:00 重点回顾    03:42 短路逻辑
P47  2.C#基础06-02,00:00 for循环    12:37 作用域
P48  2.C#基础06-03,00:00 练习讲解    11:05 while循环
P49  2.C#基础06-04,00:00 练习讲解    14:40 do…while…循环
P50  2.C#基础06-05,00:00 练习讲解    08:40 break退出循环    10:18 跳转语句
P51  2.C#基础06-06,00:00 方法
P52  2.C#基础06-07,00:00 方法参数
P53  2.C#基础06-08,00:00 怎么使用别人的方法    10:00 如何定义方法
P54  2.C#基础06-09,00:00 方法练习（打印日历）
P55  2.C#基础06-10,00:00 练习讲解
P56  2.C#基础06-11,00:00 方法的好处
P57  2.C#基础07-01,00:00 重点回顾    28:01 练习讲解
P58  2.C#基础07-02,00:46 方法的重载
P59  2.C#基础07-03,00:00 递归
P60  2.C#基础07-04(1),00:00 数组    23:20 练习讲解
P61  2.C#基础07-05(1),00:00 数组练习    15:56 数组的其他写法
P62  2.C#基础07-06,00:58 练习讲解
P63  2.C#基础07-07(1),05:27  数组foreach    19:55  foreach简化写法    26:07  Array创建数组    31:15  object
P64  2.C#基础07-08,00:00 数组常用方法及属性
P65  2.C#基础07-09,00:00 一个练习
P66  2.C#基础08-01,00:00 重点回顾
P67  2.C#基础08-02(1),00:00 练习讲解
P68  2.C#基础08-03(1),00:00 练习讲解
P69  2.C#基础08-04,00:00 for for循环嵌套
P70  2.C#基础08-05(1),00:00 冒泡排序算法
P71  2.C#基础08-06,00:00 冒泡排序算法
P72  2.C#基础08-07,00:00 练习讲解    10:42  二维数组
P73  2.C#基础08-08(1),16:10  2048简介    25:26 练习讲解
P74  2.C#基础08-09(1),00:00 2048核心算法
P75  2.C#基础08-10(1),00:00 2048讲解
P76  2.C#基础09-01,00:00 重点回顾
P77  2.C#基础09-02(1),00:00 交错数组
P78  2.C#基础09-03,00:00 参数数组
P79  2.C#基础09-04(1),00:00 数据类型
P80  2.C#基础09-05(1),25:58  数据类型与方法
P81  2.C#基础09-06(1),00:00 数据类型在方法中的应用
P82  2.C#基础09-07(1),00:00 数据类型应用    06:35  引用参数    13:31  输出参数
P83  2.C#基础09-08,00:55  练习讲解
P84  2.C#基础09-09,00:00 数据类型总结
P85  2.C#基础09-10(1),03:04  拆装箱
P86  2.C#基础09-11,00:00 string
P87  2.C#基础09-12,00:00 string
P88  2.C#基础10-01,00:00 重点回顾    
P89  2.C#基础10-02,00:00 重点回顾    
P90  2.C#基础10-03(1),00:00 枚举（简单枚举）
P91  2.C#基础10-04(1),00:00 标志枚举多选
P92  2.C#基础10-05(1),00:00 类和对象
P93  2.C#基础10-06(1),00:00 类的内存使用

P94  2.C#基础10-07(1),00:27  访问修饰符    09:40  属性
--------------------------------------------------------------------------------
数据成员：包括字段（首字母小写） ， 属性
构造函数：无构造函数=系统创建默认的无参数构造函数  ；特点：没有返回值，与类同名 ； 
方法成员：方法，构造函数
属性：字段的”助理“，首字母大写，用get、set 来操作字段
Class Wife{
Private string name;//字段
Private int age;//字段
Public string Name{ //属性
get{return name;}
set{this.name=value;}
}
}
public int Age{get... set}//省略
public Wife (string name,int age)  //构造函数
{this.Name=name;this.Age=age;}


--------------------------------------------------------------------------------
方法成员设置为private，为了参数进来时验证
P95  2.C#基础10-08(1),05:43  构造函数
P96  2.C#基础10-09,00:00 主动调用构造函数    09:35  this关键字    11:20  类结构
P97  2.C#基础10-10,00:00 练习
P98  2.C#基础10-11,00:00 练习讲解    06:25  方法举例    10:15  自动属性

P99  2.C#基础10-12,00:00 练习
--------------------------------------------------------------------------------
C#集合   List<数据类型> ，  泛型集合=广泛的数据类型
List<XX>listxx=new List<XX>(2);

C#字典集合  根据？查找？  ， 适用于更大量数据
Dictronary<string,Classxx>dic =new Dictionary<string,ClassXX> 

--------------------------------------------------------------------------------
P100  2.C#基础11-01(1),00:00 枚举回顾    14:30  类和对象回顾
P101  2.C#基础11-02(1),00:46  练习讲解    27:57  c#泛型集合    35:48  字典集合
P102  2.C#基础11-03,02:22  继承    15:14  protected访问级别
--------------------------------------------------------------------------------
protected 只有自己和儿子能用
父类型引用指向子类型对象是可以，只能用父类成员





--------------------------------------------------------------------------------
P103  2.C#基础11-04(1),00:00 父类子类转换
P104  2.C#基础11-05(1),00:55  静态Static    18:32  静态成员变量
--------------------------------------------------------------------------------
静态成员变量=静态字段： 属于类，类被加载时初始化，且只有一份
静态构造函数=类加载时调用一次，初始化类的静态成员
尽量在分别的构造函数中初始化实例/静态成员，unity不会报错。

--------------------------------------------------------------------------------
P105  2.C#基础11-06(1),00:52  静态构造函数    09:30  静态方法    23:57  静态类
P106  2.C#基础11-07,00:00 二维数组获取各方向数据
P107  2.C#基础11-08,00:00 二维数组助手类
P108  2.C#基础11-09(1),00:00 结构体
--------------------------------------------------------------------------------
构造体自带无参数构造函数，不能写无参数构造函数
使用自动属性时，有自动属性为参数的构造函数需要“：this（）”
适合封装小型相关变量， 不会造成内存垃圾
--------------------------------------------------------------------------------
P109  2.C#基础11-10(1),00:00 2048核心类-移动
P110  2.C#基础11-11,00:00 2048核心类-生成数字
P111  2.C#基础11-12,00:00 2048核心类-使用
P112 Unity01-01 复习C语言基础
P113 Unity01-04 开发工具介绍、语法结构、编译原理、创建脚本
P114 Unity01-05 、Unity生命周期（必然事件/消息）、Unity特性(【SerializeField】、【HideInInspector】、【Range(xx,yy)】)、C#类和脚本的异同、脚本中不写构造函数、不能在子线程访问主线程的成员、
P115 01-04 Awake()、Start()、Time.time、脚本启用、脚本禁用、Random.range()、OnEnable()、
P116 01-05 FixedUpdate()、Update()、LateUpdate()、OnMouseXXX()、OnBecomeXXX()、
P117 生命周期、OnReset()、Reset、
P118 调试、反编译
P119 调试
--------------------------------------------------------------------------------
加断点-attach to unity-unity play-
单帧：attach to unity - unity play -  暂停游戏 - 加断点-单帧执行

右键-快速监视
底下点“即时窗口”
--------------------------------------------------------------------------------
P120 Component、OnGUI()、【Obsolete】、transform()、.position、GetComponent<xxx>()、component.material.color、Color
P121 01-10 GetComponents<>()、GetComponentInChildren<>()、GetComponentsInParent<>()、CompareTag()、
P122 01-11 类关系、、.localPosition、.Scale、.localScale、.lossyScale
P123 01-12 transform.Translate()、transform.Rotate()、Space.world、RotateAround()、GUI.RepeateButton()、Vector3.zero、Vector3.Forward、transform.Root、SetParent()、transform.parent()
P124 01-13 transform.Find()、transform.GetChild()、transform.childCount、
P125 01-14 GameObject、activeSelf、setActive、activeInHierachy、AddComponent()、Find()、FindGameObjectsWithTag()、FindWithTag()、Destroy()、DestroyImediate()、DontDestroyOnLoad()、FindObjectOfType<xxx>()、FindObjectsOfType<xxx>()、Object
P126 02-01 复习
P127 02-02 练习题解答、Enemy、FindEnemyDemo、查找血量最低的敌人、在层级未知的情况下找物体（递归）、
P128 02-03 Time.deltaTime、fixedDeltaTime、Time.scaleTime
P129 02-04 Time.unscaledTime、Time.unscaledDeltaTime、Time.relatimeSinceStartup
P130 02-05 倒计时组件、string.Format
P131 02-06 倒计时组件、如何保证每秒执行一次、System.DateTime.Now、Invoke、InvokeRepeating
P132 02-07 停止倒计时、CancelInvoke、总结回顾三种倒计时的三种方法
P133 02-08 预制件Prefabs、
P134 02-09 Animation、动画视图、动画面板介绍、录制动画、Animation组件、创建动画、时间线、
P135 02-10 Animation方法、属性介绍、isPlaying、Play()、PlayQueued()、crossFade()、.speed、.wrapMode、.length、.time、
P136 02-11 VR作业需求分析、介绍模型
P137 02-12 VR作业需求分析
P138 03-01 复习
P139 03-02 找最近的敌人 练习 解答、Vector3.Distance()
P140 03-03 EnemyMotor属性方法定义、EnemyStatusInfo属性方法定义、EnemyAnimation属性方法定义
P141 03-04 AnimationAction类、EnemyAI属性方法定义、
P142 03-05 WayLine定义、EnemySpawn属性方法定义、
P143 03-06 EnemyMotor=>MovementForward()、PathFinding()、
P144 03-07 EnemyAI=>onUpdate()、EnemyAnimation 将模型的动画和属性绑定、EnemyAI => Attack()
P145 03-08 EnemySpawn属性方法定义、【RequireComponent(typeof())】
P146 03-09 EnemySpawn.CalculateWayLines()、WayLine构造函数
P146 03-10 EnemySpawn.SelectUsableWayLines()、EnemyAI.GenerateEnemy()、EnemyAI.createEnemy()
P147 03-11 EnemyStatusInfo.Death()

P277-P280是项目
P281-P290、P311-P320是建模与棋盘格贴图
291-310 新版动画、布料等
310结束后接278
278-280 项目，内容不全
281-290 3D建模相关内容
290结束后接311
311-340 3D建模+shader
341开始NGUI